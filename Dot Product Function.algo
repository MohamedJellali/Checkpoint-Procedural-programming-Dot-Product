FUNCTION read_pair_of_vect() : INTEGER
VAR
    n: INTEGER;
BEGIN
    REPEAT
        Write("entrer le nombre des vecteurs");
        Read(n);
    UNTIL (n>2 and n%2=0)
    RETURN n ;
END


PROCEDURE read_Vector(VAR : Tab : ARRAY_OF INTEGER)
VAR
    i : INTEGER;
BEGIN
    FOR i FROM 0 TO 1 STEP 1  DO
        IF (i=0) THEN
            Write("saisir la cordonnée x du vecteur")
            Read(Tab[i]);
        ELSE
            Write("saisir la cordonnée y du vecteur")
            Read(Tab[i]);
        END_IF
    END_FOR
END


FUNCTION dot_product(tab1,tab2 : ARRAY_OF INTEGER) : INTEGER
VAR
    i,ps : INTEGER.
BEGIN
    FOR i FROM 0 TO 1 STEP 1  DO
            ps=ps+tab1[i]*tab2[i];
    END_FOR
    RETURN (ps);
END


ALGORITHM vectors
VAR
    htab1: HASH_TABLE<INTEGER,ARRAY_OF INTEGER[2]>
    n,i,j,ps : INTEGER;
BEGIN

    n := read_pair_of_vect();

FOR i FROM 0 TO n-1 STEP 1  DO
    read_Vector(htab.get(i));
END_FOR


FOR i FROM 0 TO n-2 STEP 1  DO
    ps := dot_product(htab1.get(i),htab1.get(i+1));
        IF (ps=0) THEN
            Write(htab1.get(i),"et" htab1.get(i+1), "sont orthogonaux");
        END_IF
END_FOR

END